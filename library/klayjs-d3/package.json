{
  "name": "klayjs-d3",
  "version": "0.3.4",
  "author": {
    "name": "Ulf Rueegg",
    "email": "uru@informatik.uni-kiel.de"
  },
  "description": "Bridge for KLayJS and D3.js.",
  "main": "dist/klayjs-d3.min.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/OpenKieler/klayjs-d3.git"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "dependencies": {
    "klayjs": ">= 0.3.0"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-contrib-qunit": "~0.3.0",
    "grunt-contrib-uglify": "~0.2.7",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-contrib-clean": "~0.5.0"
  },
  "license": "EPL-1.0",
  "readme": "KLayJS-D3\n===\n\nA bridge between [KLayJS][klayjs] \nand [D3.js](http://d3js.org/).\n\nKLayJS is a layer-based layout algorithm that is especially suited for\nnode-link diagrams with an inherent direction and ports \n(explicit attachment points on a node's border).\n\nInstallation\n===\nEither download the library from the `dist` folder or install using `npm` or `bower`.\n```bash\nbower install klayjs-d3\n```\n```bash\nnpm install klayjs-d3\n```\n\nUsage\n===\n\nIf used within the browser include the library as follows. \nYou have the option to use a _web worker_ by adding a `-ww` suffix to \nthe library's name. See the documentation of [KLayJS][klayjs]\nfor further information on the web worker.\n```html\n<script type=\"text/javascript\" src=\"klayjs-d3.min.js\"></script>\n<!-- or using web worker:\n  <script type=\"text/javascript\" src=\"klayjs-d3-ww.min.js\"></script>\n-->\n```\n\nThere are two options to use the bridge. For simple, flat graphs you can \nuse the library as you are used from D3. In case your graph is \nhierarchical (i.e. nodes can contain nodes), you have to use our\n[JSON KGraph][jsonkgraph] format.\n\nAs soon as the layout process finished a callback function is invoked.\n\nD3-Style\n---\n```javascript\nvar graph = [d3loadjson()];\nvar layouter = klay.d3adapter()\n  .size([width, height])\n  .nodes(graph.nodes)\n  .links(graph.links)\n  .start();\n  \n[...]\n\nvar node = svg.selectAll(\".node\")\n  .data(graph.nodes)\n  .enter()\n  .append(\"rect\")\n  .attr(\"class\", \"node\");\n\nlayouter.on(\"finish\", function() {\n  // [apply positions]\n});\n```\n\n\nKGraph\n---\n\n```javascript\nvar graph = [jsonKGrap()];\nvar layouter = klay.d3kgraph()\n  .size([width, height])\n  .kgraph(graph);  \n  \n[...]\n\nlayouter.on(\"finish\", function() {\n  var nodes = layouter.nodes();\n  var links = layouter.links(nodes);\n  \n  svg.selectAll(\".node\")\n    .data(nodes, function(d) {return d.id;})\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", \"node\");\n    \n  // [apply positions]\n});\n```\n\nExamples \n===\n\nRunning Examples:\n- [Miserables](http://openkieler.github.io/klayjs-d3/examples/miserables/) (Data From D3 Force Example)\n- [Ports](http://openkieler.github.io/klayjs-d3/examples/ports/)\n- [Hierarchy](http://openkieler.github.io/klayjs-d3/examples/hierarchy/)\n\nSee the `examples` folder.\n\nYou can easily run the examples locally using node's http-server.\n```bash\nnpm install -g http-server\nhttp-server .\n[open browser localhost:8080]\n```\n\n\n[klayjs]: https://github.com/OpenKieler/klayjs\n[wiki-klay]: http://rtsys.informatik.uni-kiel.de/confluence/display/KIELER/KLay+Layered\n[wiki-layopts]: http://rtsys.informatik.uni-kiel.de/confluence/display/KIELER/KLay+Layered+Layout+Options\n[jsonkgraph]: http://rtsys.informatik.uni-kiel.de/confluence/display/KIELER/JSON+Graph+Format\n[klayjs-d3]: https://github.com/OpenKieler/klayjs-d3\n[d3js]: http://d3js.org/",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/OpenKieler/klayjs-d3/issues"
  },
  "_id": "klayjs-d3@0.3.4",
  "dist": {
    "shasum": "88a97eacc4dbc0e7eaaaf6da8d73da2b54f4690a"
  },
  "_from": "klayjs-d3@",
  "_resolved": "https://registry.npmjs.org/klayjs-d3/-/klayjs-d3-0.3.4.tgz"
}
